[
    "AlbertTokenizer.from_pretrained('facebook/xglm-564M')",
    "AlbertTokenizer.from_pretrained('microsoft/layoutlmv2-base-uncased')",
    "AlbertTokenizerFast.from_pretrained('facebook/xglm-564M')",
    "AlbertTokenizerFast.from_pretrained('microsoft/layoutlmv2-base-uncased')",
    "BertTokenizer.from_pretrained(\"google-bert/bert-base-cased\")",
    "AutoTokenizer.from_pretrained(TEST_MODEL_PATH)",
    "AutoTokenizer.from_pretrained(\n            \"hf-internal-testing/namespace-CohereForAI-repo_name_aya-vision-8b\", padding_side=\"left\"\n        )",
    "DonutProcessor.from_pretrained('naver-clova-ix/donut-base')",
    "GPT2Tokenizer.from_pretrained(\"hf-internal-testing/tiny-random-GPT2Model\")",
    "AutoTokenizer.from_pretrained(\"HuggingFaceTB/SmolLM2-135M-Instruct\", padding_side=\"left\")",
    "AutoTokenizer.from_pretrained(\"cognitivecomputations/dolphin-2.5-mixtral-8x7b\")",
    "JambaForCausalLM.from_pretrained(\n            'ai21labs/Jamba-tiny-dev',\n            dtype=torch.bfloat16,\n        )",
    "CLIPTokenizer.from_pretrained('hf-internal-testing/tiny-random-OwlViTForObjectDetection', revision='af958c9164f23d0f12921a8edf687f9aaa6af90e')",
    "CLIPTokenizerFast.from_pretrained('hf-internal-testing/tiny-random-OwlViTForObjectDetection', revision='af958c9164f23d0f12921a8edf687f9aaa6af90e')",
    "CTRLTokenizer.from_pretrained('hf-internal-testing/tiny-random-CTRLForSequenceClassification', revision='280b5a3502d607c55c9f8d9f198fe9c2802d6f73')",
    "CTRLTokenizer.from_pretrained('hf-internal-testing/tiny-random-CTRLLMHeadModel', revision='662381663b216f1dd3c9cd30e2e83cb4c6fc9552')",
    "CTRLTokenizer.from_pretrained('hf-internal-testing/tiny-random-CTRLModel', revision='68b19b4f132d5a191a73acd78d983cbdcf068e9c')",
    "GPTNeoXJapaneseTokenizer.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXJapaneseModel', revision='5c6ed124150df845cfc701d70b97fdcde687be52')",
    "GPTNeoXTokenizerFast.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXForCausalLM', revision='0229cfaaa843c6b492ac2abffabb00f1ff1936f8')",
    "GPTNeoXTokenizerFast.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXForQuestionAnswering', revision='7d2f08c959c211129952ee03b5562add09fe6864')",
    "GPTNeoXTokenizerFast.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXForSequenceClassification', revision='17c4b845ee2e0bb780ca2dea2d59a3d9d5d3c651')",
    "GPTNeoXTokenizerFast.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXForTokenClassification', revision='3aa4fe8a562f32230041d6d3616aa5ecc3f30192')",
    "GPTNeoXTokenizerFast.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXModel', revision='33114ba2f72189d5a2bd63f0cdb78551189242ff')",
    "JambaForCausalLM.from_pretrained(\n            'ai21labs/Jamba-tiny-dev',\n            dtype=torch.bfloat16,\n        )",
    "PLBartTokenizer.from_pretrained('hf-internal-testing/tiny-random-PLBartForCausalLM', revision='6ee51133246dbdb18fc3681ebd62d21e421b9bb4')",
    "PLBartTokenizer.from_pretrained('hf-internal-testing/tiny-random-PLBartForConditionalGeneration', revision='ba191d28f4678d20b4dfed5fca5944018282cf20')",
    "PLBartTokenizer.from_pretrained('hf-internal-testing/tiny-random-PLBartForSequenceClassification', revision='02063b3d9707fcff619a4e37a0d6e58f76e39b18')",
    "PLBartTokenizer.from_pretrained('hf-internal-testing/tiny-random-PLBartModel', revision='cfbba29169b3f40d800403fc1b53982e1f88c5f8')",
    "RobertaTokenizer.from_pretrained('hf-internal-testing/tiny-random-RobertaForMaskedLM', revision='b21c9daf0b3b66530bf5d45d67df5ec392b5059c')",
    "RobertaTokenizer.from_pretrained('hf-internal-testing/tiny-random-RobertaModel', revision='181a0b8a7ad24500ec327ad07ddb225f0680ac0a')",
    "RobertaTokenizerFast.from_pretrained('hf-internal-testing/tiny-random-RobertaForMaskedLM', revision='b21c9daf0b3b66530bf5d45d67df5ec392b5059c')",
    "RobertaTokenizerFast.from_pretrained('hf-internal-testing/tiny-random-RobertaModel', revision='181a0b8a7ad24500ec327ad07ddb225f0680ac0a')",
    "OwlViTProcessor.from_pretrained('hf-internal-testing/tiny-random-OwlViTForObjectDetection', revision='af958c9164f23d0f12921a8edf687f9aaa6af90e')",
    "AutoBackbone.from_pretrained('resnet18', use_timm_backbone=True)",
    "AutoBackbone.from_pretrained('resnet18', use_timm_backbone=True, out_indices=[1, 2, 3])",
    "UdopTokenizer.from_pretrained(\"microsoft/udop-large\")",
    "UdopTokenizerFast.from_pretrained(\n                    'microsoft/udop-large', additional_special_tokens=['<my_new_token>'], split_special_tokens=True, **{}\n                )",
    "DonutProcessor.from_pretrained('naver-clova-ix/donut-base')",
    "AutoTokenizer.from_pretrained(\"HuggingFaceTB/SmolLM2-135M-Instruct\", padding_side=\"left\")",
    "AutoTokenizer.from_pretrained('google/pegasus-xsum', use_fast=False)",
    "GPTBigCodeConfig.from_pretrained(\n            \"bigcode/gpt_bigcode-santacoder\",\n            False=False,\n            attn_pdrop=0,\n            resid_pdrop=0,\n        )",
    "GPTBigCodeConfig.from_pretrained(\n            \"bigcode/gpt_bigcode-santacoder\",\n            True=True,\n            attn_pdrop=0,\n            resid_pdrop=0,\n        )",
    "FNetTokenizerFast.from_pretrained('google/fnet-base', False=False)",
    "FNetTokenizerFast.from_pretrained('google/fnet-base', True=True)",
    "LayoutLMv3TokenizerFast.from_pretrained('microsoft/layoutlmv3-base', False=False)",
    "LayoutLMv3TokenizerFast.from_pretrained('microsoft/layoutlmv3-base', True=True)",
    "MBart50TokenizerFast.from_pretrained('facebook/mbart-large-50-one-to-many-mmt', False=False)",
    "MBart50TokenizerFast.from_pretrained('facebook/mbart-large-50-one-to-many-mmt', True=True)",
    "MPNetTokenizerFast.from_pretrained('microsoft/mpnet-base', False=False)",
    "MPNetTokenizerFast.from_pretrained('microsoft/mpnet-base', True=True)",
    "AutoFeatureExtractor.from_pretrained('facebook/wav2vec2-base-960h')",
    "Gemma3ImageProcessor.from_pretrained(\n            \"google/siglip-so400m-patch14-384\", **{'do_pan_and_scan': True, 'pan_and_scan_min_crop_size': 256, 'pan_and_scan_max_num_crops': 4, 'pan_and_scan_min_ratio_to_activate': 1.2}\n        )",
    "AutoModelForCausalLM.from_pretrained(\"hf-internal-testing/tiny-random-LlamaForCausalLM\")",
    "BloomForCausalLM.from_pretrained('bigscience/bigscience-small-testing', dtype=\"auto\")",
    "BloomForCausalLM.from_pretrained('bigscience/bigscience-small-testing', use_cache=False, dtype=\"auto\").to(\n            torch_device\n        )  # load in bf16",
    "BloomModel.from_pretrained('bigscience/bigscience-small-testing', use_cache=False, dtype=\"auto\").to(torch_device)",
    "CTRLForSequenceClassification.from_pretrained('hf-internal-testing/tiny-random-CTRLForSequenceClassification', revision='280b5a3502d607c55c9f8d9f198fe9c2802d6f73')",
    "CTRLLMHeadModel.from_pretrained('hf-internal-testing/tiny-random-CTRLLMHeadModel', revision='662381663b216f1dd3c9cd30e2e83cb4c6fc9552')",
    "CTRLModel.from_pretrained('hf-internal-testing/tiny-random-CTRLModel', revision='68b19b4f132d5a191a73acd78d983cbdcf068e9c')",
    "DPRQuestionEncoder.from_pretrained('hf-internal-testing/tiny-random-DPRQuestionEncoder', revision='09ae0269780271e0a4916f7bab1dbc4f8a76070d')",
    "DetrForObjectDetection.from_pretrained('hf-internal-testing/tiny-random-DetrForObjectDetection', revision='7dc967c53f4b3f07904c42b255346b744d0ad84e')",
    "DetrForSegmentation.from_pretrained('hf-internal-testing/tiny-random-DetrForSegmentation', revision='e34330acdae359588ef853e961a78d419dc4e8eb')",
    "DetrModel.from_pretrained('hf-internal-testing/tiny-random-DetrModel', revision='f15ce38a10c7447e8048b1681e4811322a005722')",
    "DonutSwinModel.from_pretrained('hf-internal-testing/tiny-random-DonutSwinModel', revision='1b10654fbfe2f2ea410a672ab605bd5c60d3f284')",
    "GPTNeoModel.from_pretrained(\"valhalla/gpt-neo-random-tiny\").eval()",
    "GPTNeoXForCausalLM.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXForCausalLM', revision='0229cfaaa843c6b492ac2abffabb00f1ff1936f8')",
    "GPTNeoXForQuestionAnswering.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXForQuestionAnswering', revision='7d2f08c959c211129952ee03b5562add09fe6864')",
    "GPTNeoXForSequenceClassification.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXForSequenceClassification', revision='17c4b845ee2e0bb780ca2dea2d59a3d9d5d3c651')",
    "GPTNeoXForTokenClassification.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXForTokenClassification', revision='3aa4fe8a562f32230041d6d3616aa5ecc3f30192')",
    "GPTNeoXJapaneseModel.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXJapaneseModel', revision='5c6ed124150df845cfc701d70b97fdcde687be52')",
    "GPTNeoXModel.from_pretrained('hf-internal-testing/tiny-random-GPTNeoXModel', revision='33114ba2f72189d5a2bd63f0cdb78551189242ff')",
    "GitForCausalLM.from_pretrained('hf-internal-testing/tiny-random-GitForCausalLM', revision='60f9c50466ae0beeb11776ca5bfeb6473f441554')",
    "GitModel.from_pretrained('hf-internal-testing/tiny-random-GitModel', revision='3d2eb6bddf95bb4a4e59b045d4e464c730c07f41')",
    "LongT5ForConditionalGeneration.from_pretrained('hf-internal-testing/tiny-random-LongT5ForConditionalGeneration', revision='c685cbbe706ad5c9a28689631765726a1874dcc7')",
    "M2M100ForConditionalGeneration.from_pretrained('hf-internal-testing/tiny-random-M2M100ForConditionalGeneration', revision='32ac347092d51f658b41ffc111b67d49acdeab46')",
    "Mask2FormerModel.from_pretrained('hf-internal-testing/tiny-random-Mask2FormerModel', revision='9bee8709204024b3669d503cdfe8890182f2a075')",
    "OwlViTForObjectDetection.from_pretrained('hf-internal-testing/tiny-random-OwlViTForObjectDetection', revision='af958c9164f23d0f12921a8edf687f9aaa6af90e')",
    "PLBartForCausalLM.from_pretrained('hf-internal-testing/tiny-random-PLBartForCausalLM', revision='6ee51133246dbdb18fc3681ebd62d21e421b9bb4')",
    "PLBartForConditionalGeneration.from_pretrained('hf-internal-testing/tiny-random-PLBartForConditionalGeneration', revision='ba191d28f4678d20b4dfed5fca5944018282cf20')",
    "PLBartForSequenceClassification.from_pretrained('hf-internal-testing/tiny-random-PLBartForSequenceClassification', revision='02063b3d9707fcff619a4e37a0d6e58f76e39b18')",
    "PLBartModel.from_pretrained('hf-internal-testing/tiny-random-PLBartModel', revision='cfbba29169b3f40d800403fc1b53982e1f88c5f8')",
    "PegasusForCausalLM.from_pretrained('hf-internal-testing/tiny-random-PegasusForCausalLM', revision='6e685a698302a3ba33e5379d3a37eb0bc1ae2f70')",
    "PegasusForConditionalGeneration.from_pretrained('hf-internal-testing/tiny-random-PegasusForConditionalGeneration', revision='15e58ee2ebc14b6e80ef2891259057ee5f049be2')",
    "RobertaForMaskedLM.from_pretrained('hf-internal-testing/tiny-random-RobertaForMaskedLM', revision='b21c9daf0b3b66530bf5d45d67df5ec392b5059c')",
    "RobertaModel.from_pretrained('hf-internal-testing/tiny-random-RobertaModel', revision='181a0b8a7ad24500ec327ad07ddb225f0680ac0a')",
    "RobertaPreLayerNormModel.from_pretrained('hf-internal-testing/tiny-random-RobertaPreLayerNormModel', revision='4830db38fd310404c5ab70bd00684eca0bc06ca8')",
    "SqueezeBertForMaskedLM.from_pretrained('hf-internal-testing/tiny-random-SqueezeBertForMaskedLM', revision='33ce239408c22d2c98be63c9ab4607ef9ceb6d49')",
    "SqueezeBertModel.from_pretrained('hf-internal-testing/tiny-random-SqueezeBertModel', revision='e0a3ac56a4047da3f921638252ead5e44438bbdb')",
    "TableTransformerForObjectDetection.from_pretrained('hf-internal-testing/tiny-random-TableTransformerForObjectDetection', revision='9cf1e3f5c3555a727672a32b49f8b96c5aa20be6')",
    "TableTransformerModel.from_pretrained('hf-internal-testing/tiny-random-TableTransformerModel', revision='7b446244d8739b0c29d98f7d537b15ad578577d5')",
    "CsmProcessor.from_pretrained('hf-internal-testing/namespace-sesame-repo_name_csm-1b')",
    "DetrImageProcessor.from_pretrained('hf-internal-testing/tiny-random-TableTransformerForObjectDetection', revision='9cf1e3f5c3555a727672a32b49f8b96c5aa20be6')",
    "DetrImageProcessor.from_pretrained('hf-internal-testing/tiny-random-TableTransformerModel', revision='7b446244d8739b0c29d98f7d537b15ad578577d5')",
    "DonutImageProcessor.from_pretrained('hf-internal-testing/tiny-random-DonutSwinModel', revision='1b10654fbfe2f2ea410a672ab605bd5c60d3f284')",
    "Idefics2Processor.from_pretrained(\"HuggingFaceM4/idefics2-8b\", image_seq_len=2)",
    "OwlViTImageProcessor.from_pretrained('hf-internal-testing/tiny-random-OwlViTForObjectDetection', revision='af958c9164f23d0f12921a8edf687f9aaa6af90e')",
    "OwlViTProcessor.from_pretrained('google/owlvit-base-patch32')",
    "Owlv2Processor.from_pretrained(\"google/owlv2-base-patch16-ensemble\")",
    "WhisperProcessor.from_pretrained(\"openai/whisper-tiny\")",
    "CLIPTokenizer.from_pretrained('openai/clip-vit-base-patch32', **{'additional_special_tokens': [AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=False, special=True)], 'unk_token': '<unk>'})",
    "CLIPTokenizer.from_pretrained('openai/clip-vit-base-patch32', **{'unk_token': '<unk>'})",
    "CLIPTokenizerFast.from_pretrained('openai/clip-vit-base-patch32', **{'additional_special_tokens': [AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=False, special=True)], 'from_slow': True, 'unk_token': '<unk>'})",
    "CLIPTokenizerFast.from_pretrained('openai/clip-vit-base-patch32', **{'additional_special_tokens': [AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=True, special=False)], 'unk_token': '<unk>'})",
    "CLIPTokenizerFast.from_pretrained('openai/clip-vit-base-patch32', **{'unk_token': '<unk>'})",
    "CLIPTokenizerFast.from_pretrained('openai/clip-vit-base-patch32', **{'use_fast': True, 'tokenizer_file': '/tmp/tmp8ll429w5/tokenizer.json', 'unk_token': '<unk>'})",
    "CLIPTokenizerFast.from_pretrained('openai/clip-vit-base-patch32', **{'use_fast': True, 'unk_token': '<unk>'})",
    "DebertaTokenizer.from_pretrained('microsoft/deberta-base', **{'eos_token': AddedToken(\"[NEW_EOS]\", rstrip=False, lstrip=True, single_word=False, normalized=False, special=True), 'unk_token': '[UNK]'})",
    "DebertaTokenizer.from_pretrained('microsoft/deberta-base', **{'padding_side': 'left', 'unk_token': '[UNK]'})",
    "DebertaTokenizer.from_pretrained('microsoft/deberta-base', **{'padding_side': 'right', 'unk_token': '[UNK]'})",
    "DebertaTokenizer.from_pretrained('microsoft/deberta-base', **{'unk_token': '[UNK]'})",
    "DebertaTokenizerFast.from_pretrained('microsoft/deberta-base', **{'eos_token': AddedToken(\"[NEW_EOS]\", rstrip=False, lstrip=True, single_word=False, normalized=False, special=True)})",
    "DebertaTokenizerFast.from_pretrained('microsoft/deberta-base', **{'padding_side': 'left'})",
    "DebertaTokenizerFast.from_pretrained('microsoft/deberta-base', **{'padding_side': 'right'})",
    "DebertaTokenizerFast.from_pretrained('microsoft/deberta-base', **{})",
    "FNetTokenizer.from_pretrained('google/fnet-base', **{'padding_side': 'left'})",
    "FNetTokenizer.from_pretrained('google/fnet-base', **{'padding_side': 'right'})",
    "FNetTokenizer.from_pretrained('google/fnet-base', **{})",
    "FNetTokenizerFast.from_pretrained('google/fnet-base', **{'additional_special_tokens': [AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=True, special=False)]})",
    "FNetTokenizerFast.from_pretrained('google/fnet-base', **{'padding_side': 'left'})",
    "FNetTokenizerFast.from_pretrained('google/fnet-base', **{'padding_side': 'right'})",
    "FNetTokenizerFast.from_pretrained('google/fnet-base', **{'use_fast': True})",
    "FNetTokenizerFast.from_pretrained('google/fnet-base', **{})",
    "LayoutLMv2Tokenizer.from_pretrained('microsoft/layoutlmv2-base-uncased', **{})",
    "LayoutLMv2TokenizerFast.from_pretrained('microsoft/layoutlmv2-base-uncased', **{})",
    "LayoutLMv3Tokenizer.from_pretrained('microsoft/layoutlmv3-base', **{'cls_token': '<s>', 'unk_token': '<unk>'})",
    "LayoutLMv3TokenizerFast.from_pretrained('microsoft/layoutlmv3-base', **{'cls_token': '<s>', 'use_fast': True, 'tokenizer_file': '/tmp/tmp7hxut3pv/tokenizer.json', 'unk_token': '<unk>'})",
    "LayoutLMv3TokenizerFast.from_pretrained('microsoft/layoutlmv3-base', **{'cls_token': '<s>', 'use_fast': True, 'unk_token': '<unk>'})",
    "MBart50Tokenizer.from_pretrained('facebook/mbart-large-50-one-to-many-mmt', **{'padding_side': 'left'})",
    "MBart50Tokenizer.from_pretrained('facebook/mbart-large-50-one-to-many-mmt', **{'padding_side': 'right'})",
    "MBart50Tokenizer.from_pretrained('facebook/mbart-large-50-one-to-many-mmt', **{})",
    "MBart50Tokenizer.from_pretrained('hf-internal-testing/tiny-random-mbart50', **{'additional_special_tokens': ['<my_new_token>'], 'split_special_tokens': True})",
    "MBart50Tokenizer.from_pretrained('hf-internal-testing/tiny-random-mbart50', **{'additional_special_tokens': [AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=False, special=True)]})",
    "MBart50Tokenizer.from_pretrained('hf-internal-testing/tiny-random-mbart50', **{})",
    "MBart50TokenizerFast.from_pretrained('facebook/mbart-large-50-one-to-many-mmt', **{'padding_side': 'left'})",
    "MBart50TokenizerFast.from_pretrained('facebook/mbart-large-50-one-to-many-mmt', **{'padding_side': 'right'})",
    "MBart50TokenizerFast.from_pretrained('facebook/mbart-large-50-one-to-many-mmt', **{})",
    "MBart50TokenizerFast.from_pretrained('hf-internal-testing/tiny-random-mbart50', **{'additional_special_tokens': ['<my_new_token>'], 'split_special_tokens': True})",
    "MBart50TokenizerFast.from_pretrained('hf-internal-testing/tiny-random-mbart50', **{'additional_special_tokens': [AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=False, special=True)], 'from_slow': True})",
    "MBart50TokenizerFast.from_pretrained('hf-internal-testing/tiny-random-mbart50', **{'additional_special_tokens': [AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=True, special=False)]})",
    "MBart50TokenizerFast.from_pretrained('hf-internal-testing/tiny-random-mbart50', **{'use_fast': True, 'tokenizer_file': '/tmp/tmp4l7zizah/tokenizer.json'})",
    "MBart50TokenizerFast.from_pretrained('hf-internal-testing/tiny-random-mbart50', **{'use_fast': True})",
    "MBart50TokenizerFast.from_pretrained('hf-internal-testing/tiny-random-mbart50', **{})",
    "MPNetTokenizer.from_pretrained('microsoft/mpnet-base', **{})",
    "MPNetTokenizerFast.from_pretrained('microsoft/mpnet-base', **{})",
    "NougatTokenizerFast.from_pretrained('facebook/nougat-base', **{'bos_token': '<s>', 'eos_token': '</s>', 'unk_token': '<unk>', 'pad_token': '<pad>'})",
    "OpenAIGPTTokenizer.from_pretrained('openai-community/openai-gpt', **{})",
    "OpenAIGPTTokenizerFast.from_pretrained('openai-community/openai-gpt', **{})",
    "PreTrainedTokenizerFast.from_pretrained('kmhf/hf-moshiko', **{})",
    "PreTrainedTokenizerFast.from_pretrained('robot-test/dummy-tokenizer-fast', **{'padding_side': 'left'})",
    "PreTrainedTokenizerFast.from_pretrained('robot-test/dummy-tokenizer-fast', **{'padding_side': 'right'})",
    "PreTrainedTokenizerFast.from_pretrained('robot-test/dummy-tokenizer-fast', **{})",
    "PreTrainedTokenizerFast.from_pretrained('robot-test/dummy-tokenizer-wordlevel', **{'padding_side': 'left'})",
    "PreTrainedTokenizerFast.from_pretrained('robot-test/dummy-tokenizer-wordlevel', **{'padding_side': 'right'})",
    "PreTrainedTokenizerFast.from_pretrained('robot-test/dummy-tokenizer-wordlevel', **{})",
    "RobertaTokenizer.from_pretrained('FacebookAI/roberta-base', **{'cls_token': '<s>', 'unk_token': '<unk>'})",
    "RobertaTokenizerFast.from_pretrained('FacebookAI/roberta-base', **{'cls_token': '<s>', 'unk_token': '<unk>'})",
    "RobertaTokenizerFast.from_pretrained('FacebookAI/roberta-base', **{'unk_token': '<unk>'})",
    "UdopTokenizer.from_pretrained('microsoft/udop-large', **{'truncation_side': 'left'})",
    "UdopTokenizer.from_pretrained('microsoft/udop-large', **{'truncation_side': 'right'})",
    "UdopTokenizer.from_pretrained('microsoft/udop-large', **{})",
    "UdopTokenizerFast.from_pretrained('microsoft/udop-large', **{'additional_special_tokens': [AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=True, special=False)], 'from_slow': True})",
    "UdopTokenizerFast.from_pretrained('microsoft/udop-large', **{'additional_special_tokens': [AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=True, special=False)]})",
    "UdopTokenizerFast.from_pretrained('microsoft/udop-large', **{'truncation_side': 'left'})",
    "UdopTokenizerFast.from_pretrained('microsoft/udop-large', **{'truncation_side': 'right'})",
    "UdopTokenizerFast.from_pretrained('microsoft/udop-large', **{})",
    "Wav2Vec2Tokenizer.from_pretrained('facebook/wav2vec2-base-960h', **{'pad_token': '<pad>', 'unk_token': '<unk>', 'bos_token': '<s>', 'eos_token': '</s>'})",
    "Wav2Vec2Tokenizer.from_pretrained(pretrained_name, **kwargs)",
    "WhisperTokenizer.from_pretrained('openai/whisper-small.en', **{'bos_token': '(BOS)', 'eos_token': '(EOS)'})",
    "WhisperTokenizer.from_pretrained('openai/whisper-small.en', **{'do_normalize': False, 'padding_value': 1.0})",
    "WhisperTokenizer.from_pretrained('openai/whisper-small.en', **{})",
    "XGLMTokenizer.from_pretrained('facebook/xglm-564M', **{})",
    "XGLMTokenizerFast.from_pretrained('facebook/xglm-564M', **{})",
    "AutoTokenizer.from_pretrained(\n            \"hf-internal-testing/namespace-CohereForAI-repo_name_aya-vision-8b\", padding_side=\"left\"\n        )",
    "AutoTokenizer.from_pretrained(\"openai-community/gpt2\")",
    "AutoTokenizer.from_pretrained(TEST_MODEL_PATH)",
    "BertTokenizer.from_pretrained(\"hf-internal-testing/tiny-random-BertModel\")",
    "BertTokenizer.from_pretrained('IDEA-Research/grounding-dino-base')",
    "GPT2Tokenizer.from_pretrained(\"hf-internal-testing/tiny-random-GPT2Model\")",
    "NougatTokenizerFast.from_pretrained(\"facebook/nougat-base\")",
    "PreTrainedTokenizerFast.from_pretrained(\"stepfun-ai/GOT-OCR-2.0-hf\")",
    "PreTrainedTokenizerFast.from_pretrained(['robot-test/dummy-tokenizer-fast', 'robot-test/dummy-tokenizer-wordlevel'][0])",
    "Wav2Vec2Tokenizer.from_pretrained(\"facebook/wav2vec2-base-960h\")",
    "XLMRobertaTokenizer.from_pretrained('BAAI/AltCLIP')",
    "CLIPTokenizerFast.from_pretrained('openai/clip-vit-base-patch32')",
    "FNetTokenizerFast.from_pretrained('google/fnet-base')",
    "MBart50TokenizerFast.from_pretrained('hf-internal-testing/tiny-random-mbart50')",
    "MPNetTokenizerFast.from_pretrained('microsoft/mpnet-base')",
    "UdopTokenizerFast.from_pretrained('microsoft/udop-large')",
    "CLIPTokenizerFast.from_pretrained('openai/clip-vit-base-patch32')",
    "FNetTokenizerFast.from_pretrained('google/fnet-base')",
    "MBart50TokenizerFast.from_pretrained('hf-internal-testing/tiny-random-mbart50')",
    "MPNetTokenizerFast.from_pretrained('microsoft/mpnet-base')",
    "BertTokenizer.from_pretrained(\"google-bert/bert-base-cased\")",
    "FNetTokenizer.from_pretrained(\n                        'google/fnet-base', additional_special_tokens=[AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=False, special=True)], **{}\n                    )",
    "UdopTokenizer.from_pretrained(\n                        'microsoft/udop-large', additional_special_tokens=[AddedToken(\"<special>\", rstrip=False, lstrip=True, single_word=False, normalized=True, special=False)], **{}\n                    )",
    "UdopTokenizer.from_pretrained(\"microsoft/udop-large\")",
    "LayoutLMv3TokenizerFast.from_pretrained('microsoft/layoutlmv3-base', **{'cls_token': '<s>'})",
    "UdopTokenizerFast.from_pretrained(\n                    'microsoft/udop-large', additional_special_tokens=['<my_new_token>'], split_special_tokens=True, **{}\n                )"
]